#include<stdio.h>
#include<stdlib.h>
#include<math.h>
#include<time.h>
#include<string.h>
#include <stdio.h>
void red () {
  printf("\033[1;31m");
}
void green(){
  printf("\033[1;32m");
}
void yellow (){
  printf("\033[1;33m");
}

void blue (){
  printf("\033[1;34m");
}
void purple (){
  printf("\033[1;35m");
}

void reset () {
  printf("\033[0m");
}
void  matrix(int arr[][4])
{
    int n=15;
    int num[n],i,j;
    for(i=0;i<15;i++)
    num[i]=i+1;

    srand(time(NULL));

    int lastIndex=n-1,index;

    for(i=0;i<4;i++)
    for(j=0;j<4;j++)
  {
    if(lastIndex>=0)
    {  index=rand()%(lastIndex+1);
       arr[i][j]=num[index];
       num[index]=num[lastIndex--];
    }
  }
       arr[i-1][j-1]=0;

}

void showMatrix(int arr[][4])
{   purple();
    int i,j;
    printf("--------------------\n");
    for(i=0;i<4;i++)
   { printf("|");
       for(j=0;j<4;j++)
    {   if(arr[i][j]!=0)
        printf("%-2d | ",arr[i][j]);
        else
        printf("   | ");
    }
    printf("\n");
   }

    printf("--------------------\n");
}

int win(int arr[][4])
{
    int i,j,k=1;
    for(i=0;i<4;i++)
   { for(j=0;j<4;j++,k++)
        if(arr[i][j]!=k && k!=16)
        break;
    if(j<4)
    break;
   }
        if(j<4)
        return 0;
        return 1;
}

void swap(int *x,int *y)
{
    *x=*x+*y;
    *y=*x-*y;
    *x=*x-*y;
    printf("");
}

int rkey()
{
        char c;
            c=_getch();
            if(c==-32)
            c=_getch();

    return c;
}

int shiftUp(int arr[][4])
{
    int i,j;
    for(i=0;i<4;i++)
    {
        for(j=0;j<4;j++)
            if(arr[i][j]==0)
            break;
        if(j<4)
        break;
    }
      if(i==3)
        return 0;
        swap(&arr[i][j],&arr[i+1][j]);
        return 1;
}

int shiftDown(int arr[][4])
{
    int i,j;
    for(i=0;i<4;i++)
    {
        for(j=0;j<4;j++)
            if(arr[i][j]==0)
            break;
        if(j<4)
        break;
    }
      if(i==0)
        return 0;
         swap(&arr[i][j],&arr[i-1][j]);
        return 1;
}

int shiftRight(int arr[][4])
{
    int i,j;
    for(i=0;i<4;i++)
    {
        for(j=0;j<4;j++)
            if(arr[i][j]==0)
            break;
        if(j<4)
        break;
    }
      if(j==0)
        return 0;
             swap(&arr[i][j],&arr[i][j-1]);

        return 1;
}

int shiftLeft(int arr[][4])
{
    int i,j;
    for(i=0;i<4;i++)
    {
        for(j=0;j<4;j++)
            if(arr[i][j]==0)
            break;
        if(j<4)
        break;
    }
      if(j==3)
        return 0;
                swap(&arr[i][j],&arr[i][j+1]);
        return 1;
}


void gameRule(int arr[][4])
{
    system("cls");

    int i,j,k=1;
    blue();
    printf("          WELCOME TO THE ARRANGEMENT GAME        \n\n  ");
    green();
    printf("                 RULE OF THIS GAME                 \n\n");
    red();
    printf("\n1.You can move only 1 step at a time by arrow key ");
    printf("\nMove Up   : by Up arrow key ");
    printf("\nMove Down : by Down arrow key");
    printf("\nMove Left : by Left arrow key");
    printf("\nMove Right: by Right arrow key");
    yellow();
    printf("\n2.You can move number at empty position only ");
    red();
    printf("\n3.For each valid move : your total number of move will decreased by 1 \n");
    yellow();
    printf("4.Wining situation : number in a 4*4 matrix should be in order from 1 to 15 ");
    blue();
    printf("\n\n            winning situation:         \n");

    printf("---------------------\n");
    for(i=0;i<4;i++)
   { printf("| ");
       for(j=0;j<4;j++)
    {   if(arr[i][j]!=0)
        printf("%-2d | ",4*i+j+1);
        else
        printf("   |");
    }
    printf("\n");
   }
   yellow();
    printf("---------------------\n");
    printf("\n5.You can exit the game at any time by pressing 'E' or 'e' ");
  red();
      printf("\n   Have fun..........   ");
green();
    printf("\nEnter any key to start.....   ");
   int x=rkey();
}


int main()
{
    int arr[4][4];
    int tries=500;
    char name[20];
   system("cls");
     green();
    printf("Enter player Name: ");
    scanf("%s",name);
      while(1)
    {             matrix(arr);
                  gameRule(arr);

          while(!win(arr))
        {
               system("cls");
               if(!tries)
                break;
                blue();
               printf("\n\n  WELCOM : %s  \n\n",name);
               printf("  MOVES LEFT  : %d\n\n",tries);
              showMatrix(arr);
            int key=rkey();

        switch(key)
        {
            case 69:

            case 101:
                    purple();
                        printf("\a\a\a\a\a\a\n     Thanks for Playing ! \n\a");
                        printf("\nHit 'Enter' to exit the game \n");
                        key=rkey();
                        exit(0);
            case 72:
                        if(shiftUp(arr))
                        tries--;
                        break;
            case 80:
                        if(shiftDown(arr))
                        tries--;
                        break;
            case 77:
                        if(shiftRight(arr))
                        tries--;
                        break;
            case 75:
                        if(shiftLeft(arr))
                        tries--;
                        break;
            default:

                       printf("\n\n      \a\a Not Allowed \a");

        }
        }
        if(!tries)
         {
             printf("\n\a          YOU LOSE !          \a\a\n");
         }
         else
         {
             printf("\n\a!!!!!!!!!!!!!Congratualization !!!!!!!!!!!!!\n\a");
            printf("\a               You have Won      \a\a\a ");
         }
         char check;
        red();
        printf("\nWant to play again ? \n");
        printf("Enter 'y' to play again:  ");
        scanf("%c",&check);

        if(check!='y' && check!='Y')
        break;
        tries=500;
    }
    return 0;
}
